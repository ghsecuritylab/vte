# -*- sh -*-

function menu 
{
  list=($1)
  OK=0
  max=$((${#list[*]}-1))
  #echo "MENU: ${list[*]} -- max = $max"
  
  while [ $OK -ne 1 ]
  do
    cat <<EOF

# $2
EOF
    for m in `seq 0 $(($max))`;
    do
      echo "# $m) ${list[$m]}"
    done
    cat <<EOF
EOF
    echo -n "# > "
    read reponse
    if [ $reponse -ge 0 -a $reponse -le $(($max)) ]
    then
      OK=1
    else
      error "\"$reponse\" is not a valid choice"
    fi
  done
  choice=${list[$reponse]}
  echo "# => $choice"
  echo ""

}

function question
{

    cat <<EOF

###########################################################################
# [QUESTION]
###########################################################################
# $1
###########################################################################
EOF
    [ "x$2" != "x" ] && {
        cat <<EOF
# default: $2
###########################################################################
EOF
    }
    echo -n "=> "
    read response
    # if default and no response, set response to default
    if [ "x$response" == "x" -a "x$2" != "x" ] ; then response=$2; fi
}

function action
{
    echo -e "[ACTION] $*"
    eval $* 
}

function info
{
    echo -e "[INFO] $*"
}

function warning
{
    echo -e "[WARNING] $*"
}

function error
{
    echo -e "[ERROR] $*"
}

function check
{
    echo -en "[CHECK] $* ..."
}

function check_dir_exist
{
    check "For $1"
    if [ ! -d $1 ] ;
        then
        echo "no"
        error "Directory \"$1\" doesn't exist"; 
        return 1;
    fi
    echo "yes"
    return 0;
}

function check_file_exist
{
    check "For $1..."
    if [ ! -f $1 ] ;
        then
        echo "no"
        error "File \"$1\" doesn't exist"
        return 1;
    fi
    echo "yes"
    return 0;
}


function menu_yes_no
{
    choices="no yes"
    menu "$choices" "$1"
    # this will return true if choice is "yes", false otherwise
    [ $choice = "yes" ]
}

function ask_mkdir
{
    menu_yes_no "Do you want to create \"$1\"?"
    if [ "$choice" == "yes" ] ;
        then
        mkdir -p $1 2>/dev/null || {
            sudo mkdir -p $1 && \
            sudo chown `id -nu`.`id -ng` $1 && \
            chmod ug+rwx $1 
        }
    fi
    return $?
}

function check_dir_exist_ask_mkdir
{
    check_dir_exist "$1" || ask_mkdir "$1" || return 1;
    return 0
}

function ask_user_view
{
    user_views=`cleartool lsview | grep $(whoami) | sed -ne 's/^\*\?[[:blank:]]*\([^[:blank:]]\+\)[[:blank:]]*[^[:blank:]]\+$/\1/gp'`
    menu "${user_views}" "Which clearcase view would you like to work with?"
    user_view=$choice
    info "Using view \"${user_view}\"."
}

function get_cr_title
{
    # TODO: request DDTS SQL
    cat ${UCONFIGDIR}/vte-${VTE_VERS} sed -e s/
}


export -f menu menu_yes_no action question check_dir_exist check_file_exist 
export -f ask_user_view
export -f info error warning
