# *-* sh *-*

#
# Check version consistency, little parano.
#
[ $VTE_VERSION != "VOB" ] && {
    error "VTE Version mismatch."
    return 1;
}

VTE_PACKAGE=vte-$VTE_VERSION
VTE_BLDDIR=$BLD_PREFIX/$VTE_PACKAGE-$LBP_PLATFORM

VTE_MAKEFLAGS="CROSS_CFLAGS=\"-I$LNX_BLDDIR/include\" CC=${CROSS_COMPILE}gcc AR=${CROSS_COMPILE}ar"
#LOADLIBES=\"\" LDFLAGS=-static"

views=`cleartool lsview | grep $USER | sed -ne 's/^\*\?[[:blank:]]*\([^[:blank:]]\+\)[[:blank:]]*[^[:blank:]]\+$/\1/gp'`
menu "$views" "Which clearcase view would you work with?"
info "Setting view to \"$choice\"."
action "cleartool startview $choice"
VTE_REFDIR=/view/$choice/vob/vb_sw_linux_ap_vte
unset views

if [ "x$CLEARCASE_AVOBS" == "x" ] ;
then
    error "No clearcase environment, aborting."
    exit 1;
fi

check_dir_exist $VTE_REFDIR || return $?

# directories inconsistency.
check_file_exist $VTE_BLDDIR/Makefile || {
    check_dir_exist $VTE_BLDDIR && { 
        error "VTE_BLDDIR exist but is empty or doesn't contain a valid VTE tree"
        return 1;
    }
}

# create or upate VTE_BLDDIR
menu_yes_no "Do you want i copy VTE_REFDIR to create/update VTE_BLDDIR?"
if [ "$choice" == "yes" ] ;
    then
    action "sudo rm -Rf $VTE_BLDDIR"
    action "cp -rL $VTE_REFDIR $VTE_BLDDIR"
fi
 

#
# Fix Some hard coded kernel specific parameter
#
check_file_exist $VTE_BLDDIR/Makefile && {
    action "perl -pi~ -e \"s,^[[:blank:]]*CROSS_COMPILER=.*$,CROSS_COMPILER=$CROSS_COMPILE,\" $VTE_BLDDIR/Makefile"
    action "perl -pi~ -e \"s,^export ARCH_CPU=.*$,export ARCH_CPU=$LNX_ARCH,\" $VTE_BLDDIR/Makefile"
    action "perl -pi~ -e \"s,^export ARCH_PLATFORM=.*$,export ARCH_PLATFORM=$LBP_PLATFORM,\" $VTE_BLDDIR/Makefile"
    action "perl -pi~ -e \"s,^export KLINUX_SRCDIR=.*$,export KLINUX_SRCDIR=$LNX_SRCDIR,\" $VTE_BLDDIR/Makefile"
    action "perl -pi~ -e \"s,^export KLINUX_BLTDIR=.*$,export KLINUX_BLTDIR=$LNX_BLDDIR,\" $VTE_BLDDIR/Makefile"
}

unset choice
export VTE_PACKAGE VTE_BLDDIR VTE_REFDIR VTE_MAKEFLAGS
export PATH=$VTE_BLDDIR/tools/lcov:$PATH
