# -*- sh -*-

# Environment specific to LBP
# used by *L26-22* scripts




#
# Check version consistency, little parano.
#
[ $LBP_VERSION != "L26-22" ] && {
    error "LBP Version mismatch."
    return 1;
}

#
# Linux base port common defs
#
LBP_PACKAGE=mxc_$LBP_VERSION
LBP_REFDIR=$REF_PREFIX/linuxos/linux/$LBP_PACKAGE
LBP_LIVDIR=$LIV_PREFIX/linuxos/linux
LBP_PLATFORMS=""
LBP_GUIS="with_qt"
#verif verif_gtk verif_qt with_gtk


#
# Linux kernel defs
#
LNX_ARCH=arm
LNX_VERSION=2.6.18
LNX_EXTRA_VERSION=mxc26.22
LNX_PACKAGE=linux-$LNX_VERSION-$LNX_EXTRA_VERSION
LNX_PATCHES=$LBP_REFDIR/Common/patch-$LNX_VERSION-$LNX_EXTRA_VERSION

# #
# # User choices
# #
# menu "$LBP_PLATFORMS" "Please select a Linux Base Port platform"
# LBP_PLATFORM=$choice
# menu "$LBP_GUIS" "Please select a GUI toolkit"
# LBP_GUI=$choice

# menu "Virtio EVB BrassBoard" "On which target do you want to run the Linux Base Port?"
# LNX_TARGET=$choice
# export LNX_TARGET


# case $LBP_PLATFORM in
#     ArgonPlus)
#         case $LNX_TARGET in
#             Virtio)
#                 LNX_DEFCONFIG=argonplusevb_virtio_defconfig
#                 echo "[WARNING] Rule \"make lnx_install_ref\" not available."
#                 LBP_PLATFORM=ArgonPlusVirtio
#                 ;;
#             EVB)
#                 LNX_DEFCONFIG=argonplusevb_defconfig
#                 LBP_PLATFORM=ArgonPlusEVB
#                 ;;
#             BrassBoard)
#                 LNX_DEFCONFIG=argonplusodyssey_defconfig
#                 LBP_PLATFORM=Odyssey
#                 ;;
#         esac
#         ;;
#     ArgonLV)
#         case $LNX_TARGET in
#             Virtio)
#                 LNX_DEFCONFIG=argonlvevb_virtio_defconfig
#                 echo "[WARNING] Rule \"make lnx_install_ref\" not available."
#                 LBP_PLATFORM=ArgonLVVirtio
#                 ;;
#             EVB)
#                 LNX_DEFCONFIG=argonlvevb_defconfig
#                 LBP_PLATFORM=ArgonLVEVB
#                 ;;
#             BrassBoard)
#                 echo "[WARNING] Not supported!"; exit 1;
#                 ;;
#         esac
#         ;;
#     MX31)
#         case $LNX_TARGET in
#             Virtio)
#                 LNX_DEFCONFIG=mx3ads_virtio_defconfig
#                 echo "[WARNING] Rule \"make lnx_install_ref\" not available."
#                 ;;
#             *)
#                 LBP_PLATFORM=MX31ADS
#                 echo "Target not supported, aborting."
#                 return 1;
#                 ;;                
#         esac
#         ;;
#     SCMA11)
#         case $LNX_TARGET in
#             Virtio)
#                 LNX_DEFCONFIG=scma11evb_virtio_defconfig
#                 echo "[WARNING] Rule \"make lnx_install_ref\" not available."
#                 ;;
#             EVB)
#                 LNX_DEFCONFIG=scma11evb_defconfig
#                 LBP_PLATFORM=SCMA11EVB
#                 ;;
#             BrassBoard)
#                 LNX_DEFCONFIG=scma11bb_defconfig
#                 LBP_PLATFORM=SCMA11BB
#                 ;;
#         esac
# 	;;
#     Zeus)
#         case $LNX_TARGET in
#             Virtio)
#                 echo "Target not supported, aborting."
#                 return 1;
#                 ;;
#             EVB)
#                 LNX_DEFCONFIG=zeusevb_defconfig
#                 LBP_PLATFORM=ZeusEVB
#                 ;;
#             BrassBoard)
#                 echo "Target not supported, aborting."
#                 return 1;
#                 ;;
#         esac
# 	;;
#     *)
#         echo "Platform not supported, aborting."
#         return 1;
#         ;;
# esac


# ArgonPlus     = MXC91331 
# ArgonLV       = MXC91321
# SCM-A11       = MXC91231
# Zeus          = MXC91131 
# Atlas         = MC13783 
# Roadrunner    = SC55112 
# i.MX27        = i.MX27
# i.MX??        = i.MX??

LBP_PLATFORMS=""
## ArgonPlus EVB / i.300-30 EVB
#LBP_PLATFORMS="$LBP_PLATFORMS i30030evb"
# Odyssey / i.300-30 ADS
#LBP_PLATFORMS="$LBP_PLATFORMS i30030ads"
# ArgonLV EVB / MXC300-30 EVB
LBP_PLATFORMS="$LBP_PLATFORMS mxc30030evb"
# MXC300-30 BB / MXC300-30 ADS
#LBP_PLATFORMS="$LBP_PLATFORMS mxc30030ads"
# SCM-A11 EVB / MXC275-30 EVB
LBP_PLATFORMS="$LBP_PLATFORMS mxc27530evb"
## Sonic / MXC275-30 ADS 
#LBP_PLATFORMS="$LBP_PLATFORMS mxc27530ads"
# Zeus EVB / MXC91131 EVB 
LBP_PLATFORMS="$LBP_PLATFORMS mxc91131evb"
# i.MX31 ADS
LBP_PLATFORMS="$LBP_PLATFORMS imx31ads"
# i.MX27ads
LBP_PLATFORMS="$LBP_PLATFORMS imx27ads"
# i.MX27evb
LBP_PLATFORMS="$LBP_PLATFORMS imx27evb"
# # i.MX?? EVBi.MX?? EVB
# LBP_PLATFORMS="$LBP_PLATFORMS mx??evb"
# # i.MX?? ADSi.MX?? ADS
# LBP_PLATFORMS="$LBP_PLATFORMS mx??ads"


menu "$LBP_PLATFORMS" "Please select a Linux Base Port platform"
LBP_PLATFORM=$choice

LBP_GUIS="with_qt"
menu "$LBP_GUIS" "Please select a GUI toolkit"
LBP_GUI=$choice

LNX_DEFCONFIG=${LBP_PLATFORM}_defconfig


LNX_REFDIR=$LBP_REFDIR/linux
LNX_SRCDIR=$SRC_PREFIX/$LNX_PACKAGE
LNX_BLDDIR=$BLD_PREFIX/$LNX_PACKAGE-$LBP_PLATFORM

# for Image .cfg .script, etc...
LNX_VIRTIO_REFDIR=$LBP_REFDIR/$LBP_PLATFORM/
# Official kernel image
LNX_IMAGE_REF=$LBP_REFDIR/$LBP_PLATFORM/zImage
# custom kernel image
LNX_IMAGE=$LNX_BLDDIR/arch/arm/boot/zImage
# Where to put kernel image
LNX_IMAGE_DESTDIR=/tftpboot/$USER/$LBP_PLATFORM

# Flags needed to build kernel
LNX_MAKEFLAGS="CROSS_COMPILE=${CROSS_COMPILE} ARCH=\"$LNX_ARCH\" \
KBUILD_OUTPUT=$LNX_BLDDIR"

#
# Root filesystem
#
# reference tar/gz ot the rootfs
#RFS_TAR_REF=$LBP_REFDIR/Common/rootfs_$LBP_GUI.tgz
# reference rootfs image as a cramfs
RFS_IMAGE_REF=$LBP_REFDIR/$LBP_PLATFORM/rootfs.cramfs.$LBP_GUI
# reference rootfs
RFS_REFDIR=$LBP_REFDIR/$LBP_PLATFORM/ROOTFS_$LBP_GUI
# custom rootfs
RFS_BLDDIR=$RFS_PREFIX/$LBP_VERSION-$LBP_PLATFORM-$LBP_GUI
# custom rootfs image as a cramfs
RFS_IMAGE=$RFS_PREFIX/$LBP_VERSION-$LBP_PLATFORM-$LBP_GUI.cramfs
# where to put image
RFS_IMAGE_DESTDIR=/tftpboot/$USER/$LBP_PLATFORM

check_dir_exist $LBP_REFDIR || return $?
check_dir_exist $LNX_REFDIR || return $?
check_file_exist $LNX_SRCDIR/Makefile || {
    check_dir_exist $LNX_SRCDIR && { 
        error "LNX_SRCDIR exist but is empty or doesn't contain a valid Linux tree"
        return 1;
    }
    menu_yes_no "LNX_SRCDIR doesn't exist, do you want i copy LNX_REF to create it?"
    if [ "$choice" == "yes" ] ;
        then
        action "cp -dr $LNX_REFDIR $LNX_SRCDIR"
    fi
}

check_dir_exist_ask_mkdir $LNX_BLDDIR || return $?

check_dir_exist_ask_mkdir $RFS_IMAGE_DESTDIR || return $?

#check_file_exist $RFS_TAR_REF || return $?
#check_file_exist $RFS_IMAGE_REF || return $?
check_dir_exist $RFS_REFDIR/dev || return $?
check_dir_exist $RFS_BLDDIR/dev || {
    check_dir_exist $RFS_BLDDIR && { 
        error "RFS_BLDDIR exist but is empty or doesn't contain a valid GNU/Linux root tree"
        return 1;
    }
    menu_yes_no "RFS_BLDDIR doesn't exist, do you want i copy RFS_REFDIR to create it?"
    if [ "$choice" == "yes" ] ;
        then
        action sudo cp -dr $RFS_REFDIR $RFS_BLDDIR
    fi
}

export LBP_GUI LBP_PLATFORM LBP_PACKAGE

export LNX_ARCH LNX_PACKAGE
export LNX_SRCDIR LNX_BLDDIR LNX_REFDIR
export LNX_IMAGE_REF LNX_IMAGE_DESTDIR
export LNX_IMAGE
export LNX_DEFCONFIG LNX_MAKEFLAGS 

export RFS_REFDIR RFS_BLDDIR
export RFS_IMAGE_REF
export RFS_IMAGE
