# Environment specific to LBP
# used by *cvs_head* scripts


#
# Check version consistency, little parano.
#
[ $LBP_VERSION != "cvs_head" ] && {
    error "LBP Version mismatch."
    return 1;
}

################################################################################
# Linux base port common defs
################################################################################
# FIXME: N/A because of CVS:
#        - LBP_LIVDIR
LBP_PACKAGE=mxc_$LBP_VERSION
LBP_REFDIR=$REF_PREFIX/linuxos/linux/$LBP_PACKAGE/LINUX2.6
LBP_LIVDIR=$LIV_PREFIX/linuxos/linux
LBP_PLATFORMS="MX31 ArgonPlus SCMA11 Zeus"
LBP_GUIS="base qt gtk"


################################################################################
# Linux kernel defs
################################################################################
# TODO: get LNX_VERSION from linux Makefile
# FIXME: N/A because of CVS:
#        - LNX_PATCHES
LNX_ARCH=arm 
LNX_VERSION=2.6.10
LNX_EXTRA_VERSION=mxc_cvs_head
LNX_PACKAGE=linux-$LNX_VERSION-$LNX_EXTRA_VERSION
#LNX_PATCHES=$LBP_REFDIR/Common/patch-$LNX_VERSION-$LNX_EXTRA_VERSION


################################################################################
# User choices for platform
################################################################################
menu "$LBP_PLATFORMS" "Please select a Linux Base Port platform"
LBP_PLATFORM=$choice
menu "$LBP_GUIS" "Please select a GUI toolkit"
LBP_GUI=$choice

menu "Virtio EVB BrassBoard" "On which target do you want to run the Linux Base Port?"
LNX_TARGET=$choice
export LNX_TARGET


case $LBP_PLATFORM in
    ArgonPlus)
        case $LNX_TARGET in
            Virtio)
                LNX_DEFCONFIG=argonplusevb_virtio_defconfig
                echo "[WARNING] Rule \"make lnx_install_ref\" not available."
                LBP_PLATFORM=ArgonPlus
                ;;
            EVB)
                LNX_DEFCONFIG=argonplusevb_defconfig
                LBP_PLATFORM=ArgonPlusEVB
                ;;
            BrassBoard)
#                LNX_DEFCONFIG=argonplusbb_defconfig
                echo "Target not supported, aborting."
                return 1;
                ;;
        esac
        ;;
    MX31)
        case $LNX_TARGET in
            Virtio)
                LNX_DEFCONFIG=mx3ads_virtio_defconfig
                echo "[WARNING] Rule \"make lnx_install_ref\" not available."
                ;;
            *)
                LBP_PLATFORM=MX31ADS
                echo "Target not supported, aborting."
                return 1;
                ;;                
        esac
        ;;
    SCMA11)
        case $LNX_TARGET in
            Virtio)
                LNX_DEFCONFIG=scma11evb_virtio_defconfig
                echo "[WARNING] Rule \"make lnx_install_ref\" not available."
                ;;
            EVB)
                LNX_DEFCONFIG=scma11evb_defconfig
                LBP_PLATFORM=SCMA11EVB
                ;;
            BrassBoard)
                LNX_DEFCONFIG=scma11bb_defconfig
                LBP_PLATFORM=SCMA11BB
                ;;
        esac
	;;
    Zeus)
        case $LNX_TARGET in
            Virtio)
                echo "Target not supported, aborting."
                return 1;
                ;;
            EVB)
                LNX_DEFCONFIG=zeusevb_defconfig
                LBP_PLATFORM=ZeusEVB
                ;;
            BrassBoard)
                echo "Target not supported, aborting."
                return 1;
                ;;
        esac
	;;
    *)
        echo "Platform not supported, aborting."
        return 1;
        ;;
esac


LNX_REFDIR=$LBP_REFDIR/linux
LNX_SRCDIR=$SRC_PREFIX/$LNX_PACKAGE
LNX_BLDDIR=$BLD_PREFIX/$LNX_PACKAGE-$LBP_PLATFORM

# for Image .cfg .script, etc...
# FIXME: CVS: VPMX31 VPMXCA VPMXCSCM
#LNX_VIRTIO_REFDIR=$LBP_REFDIR/$LBP_PLATFORM/
# Official kernel image (FIXME: N/A from CVS)
#LNX_IMAGE_REF=$LBP_REFDIR/$LBP_PLATFORM/vmlinux.bin
# custom kernel image
LNX_IMAGE=$LNX_BLDDIR/arch/arm/boot/zImage

# Flags needed to build kernel
LNX_MAKEFLAGS="CROSS_COMPILE=${CROSS_COMPILE} ARCH=\"$LNX_ARCH\" \
KBUILD_OUTPUT=$LNX_BLDDIR"

#
# Root filesystem
#
# FIXME: N/A with CVS
# reference tar/gz ot the rootfs
case $LBP_GUI in
    base)
        ROOTFS_FOLDER=base
        RFS_TAR_REF=$LBP_REFDIR/filesystem/$ROOTFS_FOLDER/rootfs.tgz
        ;;
    qt|gtk)
        ROOTFS_FOLDER=base_plus_$LBP_GUI
        RFS_TAR_REF=$LBP_REFDIR/filesystem/$ROOTFS_FOLDER/rootfs_with_$LBP_GUI.tgz
        ;;
    *)
        echo "Rootdisk not supported, aborting."
        return 1;
        ;;
esac

# reference rootfs image as a cramfs
RFS_IMAGE_REF=$LBP_REFDIR/filesystem/$ROOTFS_FOLDER/rootfs.cramfs
# reference rootfs
RFS_REFDIR=$LBP_REFDIR/filesystem/$ROOTFS_FOLDER/fs
# custom rootfs
RFS_BLDDIR=$RFS_PREFIX/$LBP_VERSION-$LBP_PLATFORM-$LBP_GUI
# custom rootfs image as a cramfs
RFS_IMAGE=$RFS_PREFIX/$LBP_VERSION-$LBP_PLATFORM-$LBP_GUI.cramfs


################################################################################
# Linux REF, SRC and BLD trees
################################################################################
#
# Check for errors
#
check_dir_exist $LBP_REFDIR || return $?
check_dir_exist $LNX_REFDIR || return $?
check_file_exist $LNX_SRCDIR/Makefile || {
    check_dir_exist $LNX_SRCDIR && { 
        error "LNX_SRCDIR exist but is empty or doesn't contain a valid Linux tree"
        return 1;
    }
    action "cp -dr $LNX_REFDIR $LNX_SRCDIR"
}

#
# Create or update Linux source tree
#
menu_yes_no "Do you want i copy LNX_REFDIR to create/update LNX_SRCDIR?"
if [ "$choice" == "yes" ] ;
    then
    action "rm -Rf $LNX_SRCDIR"
    action "cp -drf $LNX_REFDIR $LNX_SRCDIR"
fi

check_dir_exist_ask_mkdir $LNX_BLDDIR || return $?

################################################################################
# Root Filesystem
################################################################################
#
# Check for errors
#
#check_file_exist $RFS_TAR_REF || return $?
#check_file_exist $RFS_IMAGE_REF || return $?
check_dir_exist $RFS_REFDIR/dev || return $?
check_dir_exist $RFS_BLDDIR/dev || {
    check_dir_exist $RFS_BLDDIR && { 
        error "RFS_BLDDIR exist but is empty or doesn't contain a valid GNU/Linux root tree"
        return 1;
    }
    action sudo cp -dr $RFS_REFDIR $RFS_BLDDIR
}
#
# Create or update Filesystem tree
#
menu_yes_no "Do you want i copy RFS_REFDIR to create/update RFS_BLDDIR?"
if [ "$choice" == "yes" ] ;
    then
    action "sudo rm -Rf $RFS_BLDDIR"
    action "sudo cp -drf $RFS_REFDIR $RFS_BLDDIR"
fi


################################################################################
# Export settings
################################################################################
export LBP_GUI LBP_PLATFORM LBP_PACKAGE

export LNX_ARCH LNX_PACKAGE
export LNX_SRCDIR LNX_BLDDIR LNX_REFDIR
export LNX_IMAGE_REF 
export LNX_IMAGE
export LNX_DEFCONFIG LNX_MAKEFLAGS 

export RFS_REFDIR RFS_BLDDIR
export RFS_IMAGE_REF
export RFS_IMAGE
