# Environment specific to LBP
# used by *cvs_head* scripts


#
# Check version consistency, little parano.
#
[ $LBP_VERSION != "cvs_testbuild_pass" ] && {
    error "LBP Version mismatch."
    return 1;
}

#
# Linux base port common defs
#
LBP_PACKAGE=mxc_$LBP_VERSION
LBP_REFDIR=$REF_PREFIX/linuxos/linux/$LBP_PACKAGE
LBP_LIVDIR=$LIV_PREFIX/linuxos/linux
LBP_PLATFORMS="MX31 ArgonPlus SCMA11"
LBP_GUIS="qt gtk"


#
# Linux kernel defs
#
LNX_ARCH=arm
LNX_VERSION=2.6.7
LNX_EXTRA_VERSION=mxc_cvs_testbuild_pass
LNX_PACKAGE=linux-$LNX_VERSION-$LNX_EXTRA_VERSION
LNX_PATCHES=$LBP_REFDIR/Common/patch-$LNX_VERSION-$LNX_EXTRA_VERSION

#
# User choices
#
menu "$LBP_PLATFORMS" "Please select a Linux Base Port platform"
LBP_PLATFORM=$choice
menu "$LBP_GUIS" "Please select a GUI toolkit"
LBP_GUI=$choice


case $LBP_PLATFORM in
    ArgonPlus)
        LNX_DEFCONFIG=argonplusevb_defconfig
        ;;
    MX31)
        LNX_DEFCONFIG=mx3ads_defconfig
        ;;
    SCMA11)
        LNX_DEFCONFIG=scma11evb_defconfig
	;;
    *)
        echo "Platform not supported, aborting."
        return 1;
        ;;
esac

LNX_REFDIR=$LBP_REFDIR/linux
LNX_SRCDIR=$SRC_PREFIX/$LNX_PACKAGE
LNX_BLDDIR=$BLD_PREFIX/$LNX_PACKAGE-$LBP_PLATFORM

# for Image .cfg .script, etc...
LNX_VIRTIO_REFDIR=$LBP_REFDIR/$LBP_PLATFORM/
# Official kernel image
LNX_IMAGE_REF=$LBP_REFDIR/$LBP_PLATFORM/vmlinux.bin
# custom kernel image
LNX_IMAGE=$LNX_BLDDIR/vmlinux.bin

# Flags needed to build kernel
LNX_MAKEFLAGS="CROSS_COMPILE=${CROSS_COMPILE} ARCH=\"$LNX_ARCH\" \
KBUILD_OUTPUT=$LNX_BLDDIR"

#
# Root filesystem
#
# reference tar/gz ot the rootfs
RFS_TAR_REF=$LBP_REFDIR/Common/rootfs_with_$LBP_GUI.tgz
# reference rootfs image as a cramfs
RFS_IMAGE_REF=$LBP_REFDIR/Common/rootfs.cramfs.$LBP_GUI
# reference rootfs
RFS_REFDIR=$LBP_REFDIR/rootdisk/fs_with_$LBP_GUI
# custom rootfs
RFS_BLDDIR=$RFS_PREFIX/$LBP_VERSION-$LBP_PLATFORM-$LBP_GUI
# custom rootfs image as a cramfs
RFS_IMAGE=$RFS_PREFIX/$LBP_VERSION-$LBP_PLATFORM-$LBP_GUI.cramfs


check_dir_exist $LBP_REFDIR || return $?
check_dir_exist $LNX_REFDIR || return $?
check_file_exist $LNX_SRCDIR/Makefile || {
    check_dir_exist $LNX_SRCDIR && { 
        error "LNX_SRCDIR exist but is empty or doesn't contain a valid Linux tree"
        return 1;
    }
    menu_yes_no "LNX_SRCDIR doesn't exist, do you want i copy LNX_REF to create it?"
    if [ "$choice" == "yes" ] ;
        then
        action "cp -dr $LNX_REFDIR $LNX_SRCDIR"
    fi
}

check_dir_exist_ask_mkdir $LNX_BLDDIR || return $?

check_file_exist $RFS_TAR_REF || return $?
check_file_exist $RFS_IMAGE_REF || return $?
check_file_exist $RFS_REFDIR/linuxrc || return $?
check_file_exist $RFS_BLDDIR/linuxrc || {
    check_dir_exist $RFS_BLDDIR && { 
        error "RFS_BLDDIR exist but is empty or doesn't contain a valid GNU/Linux root tree"
        return 1;
    }
    menu_yes_no "RFS_BLDDIR doesn't exist, do you want i copy RFS_REFDIR to create it?"
    if [ "$choice" == "yes" ] ;
        then
        action sudo cp -dr $RFS_REFDIR $RFS_BLDDIR
    fi
}

export LBP_GUI LBP_PLATFORM LBP_PACKAGE

export LNX_ARCH LNX_PACKAGE
export LNX_SRCDIR LNX_BLDDIR 
export LNX_IMAGE_REF LNX_IMAGE 
export LNX_DEFCONFIG LNX_MAKEFLAGS 

export RFS_REFDIR RFS_BLDDIR
export RFS_IMAGE_REF RFS_IMAGE
