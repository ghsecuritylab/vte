#!/bin/sh

#log script, by john stultz (jstultz@us.ibm.com)
# other bits by darrick wong (djwong@us.ibm.com)

trap 'exit 0' 15

function startup() {
	# change into the pounder log dir
	if [ -x $POUNDER_LOGDIR ]; then
		cd $POUNDER_LOGDIR
	fi
	#create log dir
	mkdir statlogs
	cd statlogs
}


INFOFILE=info
#generic system info
function sysinfo() {
	uname -a >> $INFOFILE
	echo -e "\n[cpuinfo]=================" >>$INFOFILE
	cat /proc/cpuinfo >> $INFOFILE
	echo -e "\n[meminfo]=================" >>$INFOFILE
	cat /proc/meminfo >> $INFOFILE
	echo -e "\n[ifinfo]=================" >>$INFOFILE
	/sbin/ifconfig >> $INFOFILE
	echo -e "\n[sysctl]=================" >>$INFOFILE
	sysctl -a >> $INFOFILE
}
	
PROC_ENTRIES="buddyinfo diskstats meminfo slabinfo net/netstat net/snmp"
function procinfo() {
	#get a timestamp
	NOW=`date`
	for i in $PROC_ENTRIES
	do
		logfile=`basename $i`
		echo -e "\n$NOW" >> $logfile.log
		cat /proc/$i >> $logfile.log
		sleep 1
	done
}

# ten second delay; run 150s before outputting timestamp
DELAY=10
COUNT=15

#single shot logging apps
function singleshots(){
	echo > vmstat.log
	echo > iostat.log

	while true; do
		vmstat $DELAY $COUNT >> vmstat.log
		NOW=`date`
		echo -e "\n$NOW\n" >> vmstat.log
	done &

	IOSTAT=`which iostat 2> /dev/null`
	if [ -n "$IOSTAT" -a -x "$IOSTAT" ]; then
		while true; do
			iostat -x $DELAY $COUNT >> iostat.log
			NOW=`date`
			echo -e "\n$NOW\n" >> iostat.log
		done &
	fi
}

# periodically run apps & functions
function runlogging(){
	CMDS="procinfo"
	while true
	do
		for i in $CMDS
		do
			$i
			sleep 1
		done
		sleep $DELAY
	done		
}

trap 'exit 0' 15

startup $*
sysinfo
singleshots
runlogging
tail -f /var/log/messages /var/log/syslog /var/log/daemon.log /var/log/kern.log /var/log/warn /var/log/faillog > system_logs &

exit 0
